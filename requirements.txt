# This is a list of python packages needed for ESP-IDF. This file is used with pip.
# Please see the Get Started section of the ESP-IDF Programming Guide for further information.
#
setuptools==59.6.0
# The setuptools package is required to install source distributions and on some systems is not installed by default.
# Please keep it as the first item of this list. Version 21 is required to handle PEP 508 environment markers.
#
click==8.0.4
pyserial==3.5
future==0.18.3

cryptography==39.0.0
--only-binary cryptography
# Only binary for cryptography is here to make it work on ARMv7 architecture
# We do have cryptography binary on https://dl.espressif.com/pypi for ARM
# On https://pypi.org/ are no ARM binaries as standard now

pyparsing==2.3.1
pyelftools==0.29
idf-component-manager==1.2.2

gdbgui==0.13.2.0; python_version < "3.11"
# 0.13.2.1 supports Python 3.6+ only
# Windows is not supported since 0.14.0.0. See https://github.com/cs01/gdbgui/issues/348
pygdbmi==0.9.0.2; python_version < "3.11"
# The pygdbmi required max version 0.9.0.2 since 0.9.0.3 is not compatible with latest gdbgui (>=0.13.2.0)
# A compatible Socket.IO should be used. See https://github.com/miguelgrinberg/python-socketio/issues/578
python-socketio==4.6.1; python_version < "3.11"
jinja2==3.0.3; python_version < "3.11"   # See https://github.com/espressif/esp-idf/issues/876
itsdangerous==2.0.1; python_version < "3.11"

# gdbgui is not supported on Python 3.11. See https://github.com/cs01/gdbgui/issues/447
pygdbmi==0.9.0.2; python_version > "3.10"

kconfiglib==13.7.1

# esptool requirements (see components/esptool_py/esptool/setup.py)
reedsolo==1.5.4
# bitstring 4 dropped support for Python 3.6 and older
bitstring==3.1.9
ecdsa==0.18.0

# espcoredump requirements
# This is the last version supports both 2.7 and 3.4
construct==2.10.54

colorama==0.4.5
urllib3==1.26.14
Pygments==2.14.0
requests==2.27.1
tqdm==4.64.1
importlib-metadata==4.8.3
importlib-resources==5.4.0
packaging==21.3
charset-normalizer==2.0.12
typing_extensions==4.1.1
zipp==3.6.0
six==1.16.0
idna==3.4
gevent==1.5.0
pyyaml==6.0.1
lockfile==0.12.2

# windows-curses are required in Windows command line but cannot be installed in MSYS2. A requirement like
# "windows-curses; sys_platform == 'win32'" would want to install the package on both of them. There is no environment
# marker for detecting MSYS2. So instead, a dummy custom package is used with "windows-curses" dependency for Windows
# command line.
file://${IDF_PATH}/tools/kconfig_new/esp-windows-curses; sys_platform == 'win32'
